/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ayana;

import Classes.ComboListener;
import Classes.Inventory_Moves;
import Classes.Inventory_Reg;
import Classes.Inventory_Type;
import Classes.Save;
import Classes.SourceType;
import Conexion.Conexion;
import java.awt.Image;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author macbook
 */
public class AddRegMovimientosDet extends javax.swing.JDialog {

    /**
     * Creates new form AddRegMovimientosDet
     */
    public AddRegMovimientosDet() {
        initComponents();
            setIconImage (new ImageIcon(getClass().getResource("Images/Screenshot_1.png")).getImage());
    ImageIcon imagen = new ImageIcon(getClass().getResource("Images/Guardar.png"));
      Icon  fondo = new ImageIcon(imagen.getImage().getScaledInstance(25, 25, Image.SCALE_SMOOTH));
        btnCapturarMovProductos.setIcon(fondo);
      
                con=new Conexion();
                con.Conectar();
                try{
                      sourcetype = con.GetSources();
                     inventory_type = con.GetInventoryTypes2();
           
                } catch (SQLException ex) {}
                con.Desconectar();
         
            for (Inventory_Type obj : inventory_type) {
            vectorProductoMov.add(obj.Description);
        }
            
        cbxProductoMovProducto.setModel(new DefaultComboBoxModel(vectorProductoMov));
        JTextField text = (JTextField) cbxProductoMovProducto.getEditor().getEditorComponent();
        text.setFocusable(true);
        text.setText("");
        text.addKeyListener(new ComboListener(cbxProductoMovProducto, vectorProductoMov));
        for (SourceType obj : sourcetype) {
            if (obj.Id != 0) {
                cbxSourceSalida.addItem(obj.Description);
            }
            cbxSourceEntrada.addItem(obj.Description);
        }
    }
Conexion con;
Vector vectorSourceSalida = new Vector();
Vector vectorSourceEntrada = new Vector();
  List<SourceType> sourcetype;
Vector vectorProvider = new Vector();
Vector vectorProductoMov = new Vector();
  List<Inventory_Type> inventory_type;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        cbxSourceSalida = new javax.swing.JComboBox<>();
        cbxSourceEntrada = new javax.swing.JComboBox<>();
        cbxProductoMovProducto = new javax.swing.JComboBox<>();
        nupCantidadMovProducto = new javax.swing.JSpinner();
        btnCapturarMovProductos = new javax.swing.JButton();
        checkMerma = new javax.swing.JCheckBox();
        jLabel49 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar movimiento de inventario");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setBackground(new java.awt.Color(217, 234, 220));
        jLabel12.setFont(new java.awt.Font("InaiMathi", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Agregar movimiento de inventario");

        cbxSourceSalida.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        cbxSourceSalida.setForeground(new java.awt.Color(51, 51, 51));
        cbxSourceSalida.setToolTipText("");
        cbxSourceSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSourceSalidaActionPerformed(evt);
            }
        });

        cbxSourceEntrada.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        cbxSourceEntrada.setForeground(new java.awt.Color(51, 51, 51));
        cbxSourceEntrada.setToolTipText("");
        cbxSourceEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSourceEntradaActionPerformed(evt);
            }
        });

        cbxProductoMovProducto.setEditable(true);
        cbxProductoMovProducto.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        cbxProductoMovProducto.setForeground(new java.awt.Color(51, 51, 51));
        cbxProductoMovProducto.setToolTipText("");
        cbxProductoMovProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxProductoMovProductoActionPerformed(evt);
            }
        });

        nupCantidadMovProducto.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        nupCantidadMovProducto.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        btnCapturarMovProductos.setBackground(new java.awt.Color(255, 255, 255));
        btnCapturarMovProductos.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        btnCapturarMovProductos.setForeground(new java.awt.Color(102, 102, 102));
        btnCapturarMovProductos.setText("Agregar");
        btnCapturarMovProductos.setToolTipText("");
        btnCapturarMovProductos.setBorder(null);
        btnCapturarMovProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarMovProductosActionPerformed(evt);
            }
        });

        checkMerma.setBackground(new java.awt.Color(255, 255, 255));
        checkMerma.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        checkMerma.setForeground(new java.awt.Color(51, 51, 51));
        checkMerma.setText("Merma");
        checkMerma.setToolTipText("");
        checkMerma.setEnabled(false);

        jLabel49.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(102, 102, 102));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel49.setText("Salida");
        jLabel49.setToolTipText("");

        jLabel57.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(102, 102, 102));
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel57.setText("Entrada");
        jLabel57.setToolTipText("");

        jLabel50.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(102, 102, 102));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel50.setText("Producto");
        jLabel50.setToolTipText("");

        jLabel51.setFont(new java.awt.Font("InaiMathi", 0, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(102, 102, 102));
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel51.setText("Cantidad");
        jLabel51.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxProductoMovProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxSourceSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxSourceEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nupCantidadMovProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(checkMerma)
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCapturarMovProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(checkMerma))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbxSourceSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxSourceEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxProductoMovProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nupCantidadMovProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnCapturarMovProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxSourceSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSourceSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxSourceSalidaActionPerformed

    private void cbxSourceEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSourceEntradaActionPerformed
        try {
            SourceType src = sourcetype.stream()
            .filter(obj -> cbxSourceEntrada.getSelectedItem().toString().equals(obj.Description))
            .findAny()
            .orElse(null);
            if(src.Id==0){
                checkMerma.setEnabled(true);
            }else
            {
                checkMerma.setEnabled(false);
                checkMerma.setSelected(false);
            }
        } catch (Exception e) {
        }      finally{}
    }//GEN-LAST:event_cbxSourceEntradaActionPerformed

    private void cbxProductoMovProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxProductoMovProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxProductoMovProductoActionPerformed

    private void btnCapturarMovProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarMovProductosActionPerformed
        try {
            Inventory_Type producto = inventory_type.stream()
            .filter(obj -> cbxProductoMovProducto.getSelectedItem().toString().equals(obj.Description))
            .findAny()
            .orElse(null);
            SourceType src = sourcetype.stream()
            .filter(obj -> cbxSourceSalida.getSelectedItem().toString().equals(obj.Description))
            .findAny()
            .orElse(null);
            SourceType src2 = sourcetype.stream()
            .filter(obj -> cbxSourceEntrada.getSelectedItem().toString().equals(obj.Description))
            .findAny()
            .orElse(null);
            int cantidad=Integer.parseInt(nupCantidadMovProducto.getValue().toString());

            int stock=0;
            if(src.Id==1){//distr
                stock=producto.TotalStock-producto.CabinaStock-producto.PuntoVentaStock;
            }else if(src.Id==2){//pv
                stock=producto.PuntoVentaStock;
            }else{
                stock=producto.CabinaStock;
            }
            if(stock<cantidad){
                JOptionPane.showMessageDialog(this,"No hay suficientes productos para realizar esta acción.","Error de guardado",JOptionPane.ERROR_MESSAGE);
                return;
            }
            int trash=0;
            if(checkMerma.isSelected()){
                trash=1;
            }
       int n = JOptionPane.showConfirmDialog(this,
"¿Desea guardar estos movimientos? ","",
JOptionPane.YES_NO_OPTION);
   if(n==JOptionPane.YES_OPTION){
          con=new Conexion();
              con.Conectar();
                try{
                      sourcetype = con.GetSources();
                    con.AddMovesProducto2(Save.reg_id,new Inventory_Moves(src.Id,src2.Id,producto.Id,cantidad,Save.reg_id,trash));
                     inventory_type = con.GetInventoryTypes2();
                } catch (SQLException ex) {}
                con.Desconectar();
                JOptionPane.showMessageDialog(this,"Productos actualizados con éxito.");
           this.dispose();
         }
        } catch (Exception e) {
        }finally{}
    
    }//GEN-LAST:event_btnCapturarMovProductosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRegMovimientosDet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRegMovimientosDet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRegMovimientosDet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRegMovimientosDet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRegMovimientosDet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapturarMovProductos;
    private javax.swing.JComboBox<String> cbxProductoMovProducto;
    private javax.swing.JComboBox<String> cbxSourceEntrada;
    private javax.swing.JComboBox<String> cbxSourceSalida;
    private javax.swing.JCheckBox checkMerma;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner nupCantidadMovProducto;
    // End of variables declaration//GEN-END:variables
}
